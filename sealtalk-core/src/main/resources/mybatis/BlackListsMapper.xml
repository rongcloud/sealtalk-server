<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rcloud.server.sealtalk.dao.BlackListsMapper">
  <resultMap id="BaseResultMap" type="com.rcloud.server.sealtalk.entity.BlackLists">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="friendId" jdbcType="INTEGER" property="friendId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>

  <resultMap id="withUserResultMap" extends="BaseResultMap" type="com.rcloud.server.sealtalk.entity.BlackLists">
    <association property="users"  javaType="com.rcloud.server.sealtalk.entity.Users">
      <id column="u_user_id" jdbcType="INTEGER" property="id" />
      <result column="u_user_nickname" jdbcType="VARCHAR" property="nickname" />
      <result column="u_user_portraitUri" jdbcType="VARCHAR" property="portraitUri" />
      <result column="u_user_gender" jdbcType="VARCHAR" property="gender" />
      <result column="u_user_stAccount" jdbcType="VARCHAR" property="stAccount" />
      <result column="u_user_phone" jdbcType="VARCHAR" property="phone" />
      <result column="u_user_updatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
    </association>
  </resultMap>

    <insert id="saveOrUpdate" parameterType="com.rcloud.server.sealtalk.entity.BlackLists">
        insert into blacklists(userId, friendId, status, createdAt, updatedAt) values(#{userId}, #{friendId}, #{status}, NOW(), NOW()) on duplicate key update status = #{status}, updatedAt = NOW()
    </insert>

    <select id="selectByUserIdAndFriendId"  resultMap="BaseResultMap">
        select * from blacklists where userId=#{userId} or friendId=#{friendId}
    </select>

    <delete id="deleteByUserIdAndFriendId">
        delete from blacklists where userId=#{userId} and friendId=#{friendId}
    </delete>

    <delete id="deleteByUserIdOrFriendId">
        delete from blacklists where userId=#{userId} or friendId=#{friendId}
    </delete>

  <select id="selectBlackListsWithFriendUsers" resultMap="withUserResultMap">
        select
         b.id,
         b.userId,
         b.friendId,
         b.status,
         b.createdAt,
         b.updatedAt,
         u.id as u_user_id,
         u.nickname as u_user_nickname,
         u.portraitUri as u_user_portraitUri,
         u.gender as u_user_gender,
         u.stAccount as u_user_stAccount,
         u.phone as u_user_phone,
         u.updatedAt as u_user_updatedAt
         from
        blacklists b join users u on b.friendId = u.id
        where b.userId=#{userId}
        and b.friendId != 0
        and status = 1;

  </select>

</mapper>